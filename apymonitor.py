from datetime import datetime
from xml.dom import minidom
import traceback
import argparse
import logging

import pefile


extra_header = """
    -
    This document was generated by Apymonitor.
    {} UTC
    A python project which generates a valid APIMonitor XML document with a PE as input.
    More info: github.com/felipetarijon/apymonitor""".format(datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S'))

xml_header = """<?xml version="1.0"?>
	<!--
	API Monitor Filter
	(c) 2010-2013, Rohitab Batra <rohitab@rohitab.com>
	http://www.rohitab.com/apimonitor/{}
	-->\n""".format(extra_header)


if __name__ == '__main__':
    log_format = '[%(levelname)s] %(message)s'
    logger = logging.getLogger()
    logger.setLevel(logging.INFO)
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(logging.Formatter(log_format))
    console_handler.setLevel(logging.INFO)
    logger.addHandler(console_handler)

    # argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--input",
                        help="Input file path", type=str)
    parser.add_argument("-o", "--output",
                        help="Output path", type=str)
    parser.add_argument("-s", "--silent", help="Do not output into stdout", action="store_true")

    args = parser.parse_args()
        
    pe = pefile.PE(args.input)

    doc = minidom.Document()

    root = doc.createElement('ApiMonitor')
    doc.appendChild(root)

    capture_filter = doc.createElement('CaptureFilter')
    root.appendChild(capture_filter)

    for entry in pe.DIRECTORY_ENTRY_IMPORT:
        module = doc.createElement('Module')
        module.setAttribute('Name', entry.dll.decode())

        capture_filter.appendChild(module)
        
        for imp in entry.imports:
            api = doc.createElement('Api')
            api.setAttribute('Name', imp.name.decode())

            module.appendChild(api)

    if args.output:
        with open(args.output, "w+") as output_file:
            output_file.write(xml_header + root.toprettyxml())
            output_file.close()
    
    if not args.silent:
        print(root.toprettyxml())
